.. _init_hot_nft:

Initializing the Hot NFT Payment Credential Script
===================================================

The next step is to initialize the payment credential script for the cold
credential NFT, which will be very similar to initializing the cold NFT script.

Step 1: Obtaining the X.509 certificate files
---------------------------------------------

Follow the steps listed in :ref:`init_cold_nft`.
``child-7`` through ``child-9`` will belong to the voting role.

Step 2: Creating the assets
---------------------------

We can now use ``orchestrator-cli`` to initialize the script:

.. code-block:: bash

   $ orchestrator-cli hot-nft init \
       --testnet \
       --cold-nft-policy-id $COLD_POLICY_ID \
       --hot-credential-script-file hot-credential/script.plutus \
       --voting-cert example-certificates/children/child-7/child-7-cert.pem \
       --voting-cert example-certificates/children/child-8/child-8-cert.pem \
       --voting-cert example-certificates/children/child-9/child-9-cert.pem \
       -o hot-nft


Let's see what assets were created.

.. code-block:: bash

   $ ls hot-nft -1
   datum.json
   script.addr
   script.hash
   script.plutus

``datum.json`` contains the initial datum for the script.

.. code-block:: bash

   $ cat hot-nft/datum.json
   {
       "list": [
           {
               "constructor": 0,
               "fields": [
                   {
                       "bytes": "fb5e0be4801aea73135efe43f4a3a6d08147af523112986dd5e7d13b"
                   },
                   {
                       "bytes": "57f5530e057e20b726b78aa31104d415cb2bce58c669829a44d009c1b1005bcd"
                   }
               ]
           },
           {
               "constructor": 0,
               "fields": [
                   {
                       "bytes": "a3c6cb93a32b02877c61f64ab1c66c4513f12788bf7c500ead7d941b"
                   },
                   {
                       "bytes": "9923f31c1ce14e2acbd505fa8eebd4ce677d1bcd96c6d71610f810f2008ecc3a"
                   }
               ]
           },
           {
               "constructor": 0,
               "fields": [
                   {
                       "bytes": "eda6befbe1a4cb8191752d97b67627a548bcc5f3e4653ecfdba7cdf0"
                   },
                   {
                       "bytes": "ecd64beefcf59f01a975457b0a3623d2b03d5bcf71642a8d8d8275e4668aad31"
                   }
               ]
           }
       ]
   }

We can, and should, sanity check that this datum contains the correct values:

.. code-block:: bash

   $ diff \
      <(cat example-certificates/children/child-7/child-7.keyhash) \
      <(cat hot-nft/datum.json | jq -r '.list[0].fields[0].bytes')
   $ diff \
      <(cat example-certificates/children/child-7/child-7-cert.hash) \
      <(cat hot-nft/datum.json | jq -r '.list[0].fields[1].bytes')
   $ diff \
      <(cat example-certificates/children/child-8/child-8.keyhash) \
      <(cat hot-nft/datum.json | jq -r '.list[1].fields[0].bytes')
   $ diff \
      <(cat example-certificates/children/child-8/child-8-cert.hash) \
      <(cat hot-nft/datum.json | jq -r '.list[1].fields[1].bytes')
   $ diff \
      <(cat example-certificates/children/child-9/child-9.keyhash) \
      <(cat hot-nft/datum.json | jq -r '.list[2].fields[0].bytes')
   $ diff \
      <(cat example-certificates/children/child-9/child-9-cert.hash) \
      <(cat hot-nft/datum.json | jq -r '.list[2].fields[1].bytes')

``script.addr`` contains the script address in bech-32 format:

.. code-block:: bash

   $ cat hot-nft/script.addr
   addr_test1wqgvl76s9anu0hnnh07unfrzkrx27k4yu0vthn85w8agwxqteatvx

``script.plutus`` contains the compiled script bytes wrapped in a text envelope:

.. code-block:: bash

   $ cat hot-nft/script.plutus
   {
       "type": "PlutusScriptV3",
       "description": "",
       "cborHex": "590e68590e65010100333232323232323232323232323232323232323232323232323232323222222593333222293232325333573466e1d200000218009919192999ab9a3370e900000109919191919191919191919191919194004c004d5d08084c004d5d0807ccc0b00c4d5d08074d5d0806cd5d08064d5d0805cd5d08054d5d0804ccc0b1d71aba10089aba10079aba10069aba100599981a11919192999ab9a3370e90000010c004c0d8d5d0800854ccd5cd19b87480080086006606c6ae840042a666ae68cdc3a40080043005375c6ae840042606e921035054310035573c0046aae74004dd50009981a0170179aba10049aba10039aba10029aba135744004302b23232325333573466e1d2000002180098199aba1001981a1aba13574400213036491035054310035573c0046aae74004dd50009aba2001357440026ae88004d5d10009aba2001357440026ae88004d5d10009aba2001357440026ae88004d5d10009aba200135744002260489201035054310035573c0046aae74004dd51aba10019919192999ab9a3370e90000010c00cd5d0800854ccd5cd19b8748008008601260426ae840042a666ae68cdc3a400800430073574200215333573466e1d200600218009aba10019aba13574400215333573466e1d200800218059aba10010a999ab9a3370e90050010c014d5d0800cd5d09aba2001098122481035054310035573c0046aae74004dd51aba13574400213021491035054310035573c0046aae74004dd5002c8a4006450029400a450029400a52007222222222222232322223004012303622590018c00a4432005225900291480bc8a54ccd5cd19b8f0040021333573466e1c00c006001002180146402244b203d232323213001023304522590018c00a442b200f229004914a999ab9a3371e00800426609600600230028c805c8c88c008080c13889640063002910a999ab9a3371e00a0042b2a01f1300e8004884c0420041300400122601000a04b200318014564cc04001006e3002910ac800c564cc0d400a401a4445001004801e0066e9cc129402100122b2027180048860048c009221801013302b290019148024894ccd5cd19b8f00400215333573466e3c00c00460043000180000411593300d0010188c00a44320052222590028c00a42b200521801456401a2b26608800b201122220044564c0b80063002910ac9981d00348054888800d1593303402a02690c800c8a40064444b2005180148564c10c006432003222593303e0010278ac811c60012218012300223002486004230024600446004910c00890c0084564cc0ac08407643200322900191112c801460052159303a00190c800c888cc0d40040791801243002118012442b26601e00603518014885640062b26606800400b1593302d02301689919980091480148a400e44b2009290039499826001000c4ccc0248a400a452007225900491480248a54ccd5cd19b8f0040021330550030011801456401e2b200b180046005180122b200b180146001180122b200b1801460051800118010001400e300248600521801252007218014a4cc1300080062666012452005229003912c80248a4012452a666ae68cdc780200109982a8018008c00a2b200f1590058c00230028c0091590058c00a30008c0091590058c00a30028c0008c008000a00718012430024a400e4300290c00a526609a0040031333009229002914801c89640124520092295333573466e3c0100084cc15400c00460051590078ac802c60011801460048ac802c60051800460048ac802c60051801460004600400050038c0080027003800c004095801c004016008c000c000a059180123002488600411300a0070111980f94800c888a401e4445200922900294805c8a400a466088008003280112900b9148014a00523304400400100005280106eb8014c064010c01800cc8c8c94ccd5cd19b8748000008600e60306ae8400660326ae84d5d1000854ccd5cd19b87480080086002602a6ae840042a666ae68cdc3a4008004300215333573466e1d200600218020980ea49035054310035573c0046aae74004dd5001460011301a4901035054350018068061980d1109112c80145640063000910c009221590038c00a442b26600e008005133353009120010070030018c00809000912c801460052213232333573466e24cdc019b8300148010cdc3000a400860186600e46604044b2003180148854ccd5cd19b8f005002180009802000801800a001002300a00133008300700480008c88c008004c06489640063000910992c9803001c600600700144004600800223223002900191111111111111110078c0608964006300291190c801c8a40064444600e006180e112c800c4c01800e4432005225333573466e3c00802c6002010130060030602c44b2003180048860072005220024c0100043015222590028c002446426002008603444b200318018024cc01c00e0060090052442b26603800400d133009005007898020008301422590018a400122133700900118020008c04c8964006290004884cdc024004600800222900291114802c888964cc05c0200122b26601600e007153290078ac801c540064300290c00921590048c00a42a666ae68cdd78010008a8018c00a4300248564012300290c00a42a666ae68cdc78010008a8018c00815900590ac801484cc07000800630024564006430028c0008c009180102233323300123008001330012333573466e1d200000180040080408c8c88c888cc00c008004c05c8896400a2600a0032215900389804002488640124465200b2259330210050028ac99806802000c4cc03002001a30024564c0400122660180100151330035930100018c0023003007c00000606040444b200318014886400a44b260280031330070060038ac998128048014564cc04402000626602001866604e444b2005100191099802800c00c00a006003001c6004899803c00c01200c00300602a44b200318004886400a44b26010003130060038c008180a112c800c60012219002912c9803800c4c01800e3002000400246666646600200444a666ae68cdc3a40000042b26666aae7c004a00450018009aba10029aba200220012190019129949800801c8564cccd55cf80194008a0030013574200935744008400243200322593233333300c0032280114008004a0045002301c2233335573e00250018000964c020d5d080148564c010d5d1001c8600300300280091801226500230033574400480048564cccd55cf801140088c8ca002004357440086ae8400e00121593233333300e0022280114008004a0045002301e2233335573e00250018000964c028d5d080148564c010d5d1001c86003003002800918012265002300335744004800486003001007801c0048c00918012300223002460042333333007001225333573466e1d200000215933335573e00250022800c004d5d08014d5d1001100090c800c894ca4c00400e42b26666aae7c00ca004464650010021aba20053574200900090ac9801800c86003001003800918012300246004233333300d0012280114008a0045002280080091801060045002280114008a0048c00830022222223333333574800c4646600e6aae74004d55cf0009baa00723005375600e460086eb001c8c00cdd6803918011bae00780014008a0045002280111919192999ab9a3370e90000010c004dd71aba10019bae357426ae8800426018921035054310035573c0046aae74004dd5000919118011bac001300f2233335573e0025000280198021aba100298019aba20024000c03489640063000910c8014894ccd5cd19b87480000044c01800c600411919192999ab9a3370e90000010c004dd71aba10019bad357426ae8800426012921035054310035573c0046aae74004dd500091919192999ab9a3370e90000010c00854ccd5cd19b874800800860082a666ae68cdc3a4008004300013008491035054310035573c0046aae74004dd500091919192999ab9a3370e90000010c004dd71aba10019bad357426ae880042600e921035054310035573c0046aae74004dd500091919192999ab9a3370e90000010991919194004c8c8c94ccd5cd19b8748000008600260186ae840066600a4646464a666ae68cdc3a4000004300130103574200215333573466e1d20020021328019bad35742005375a6ae840066eb4d5d09aba20011aba2001130114901035054310035573c0046aae74004dd50009aba1357440021300d4901035054310035573c0046aae74004dd51aba1005998009800bad357420093232325333573466e1d200000218000a999ab9a3370e90010010c014dd71aba10010a999ab9a3370e90020010c00cd5d080084c035241035054310035573c0046aae74004dd51aba1003998013ae357426ae8800c6014eb888c8c8c94ccd5cd19b874800800860042a666ae68cdc3a400000430013005357420021300d491035054310035573c0046aae74004dd50009aba2001357440022600c921035054310035573c0046aae74004dd500091919192999ab9a3370e90000010c004dd71aba10010a999ab9a3370e90010010c00cdd71aba100109802a49035054310035573c0046aae74004dd5000919319ab9c0018001119118011bab00130082233335573e0025000232801c004c018d55ce800cc014d55cf000a60086ae8800c6ae8400a00045200522900391194802ca40124a666ae68cdc78010008a8018c00a50024a4012500292999ab9a3371e0040022a0063002056400e42b20052190029480148cc030008006445002488a401250029112999ab9a3370e00c0062a666ae68cdc38028010998078020008c0086004460048ac800c860051800011199ab9a3370e0040030008011148014a400a46600a0040032801252005280148cc01400800422333573466e3c008006001002300122590018a5eb8244266ae82400a4466e9520003357406ea4008cd5d01ba90014bd700c0100044646002002446600660040040029811e581cc8aa0de384ad34d844dc479085c3ed00deb1306afb850a2cde6281f4004c0122d87a9f581cc5ce2386d5fee41a026feb39814e8a0e4185917bfbcd6f1c553d738aff0001"
   }

``script.hash`` contains a hash of the script bytes as hexadecimal text:

.. code-block:: bash

   $ cat hot-nft/script.hash
   10cffb502f67c7de73bbfdc9a462b0ccaf5aa4e3d8bbccf471fa8718

Step 3: Assemble and submit the transaction
-------------------------------------------

Using the assets created in step 2, create a transaction that sends the datum
to the script address:

.. code-block:: bash

   $ cardano-cli conway transaction build \
     --change-address $(cat orchestrator.addr) \
     --tx-in "$(get-orchestrator-ada-only | jq -r '.key')" \
     --tx-in "$(get-output-by-policy-id $HOT_POLICY_ID | jq -r '.key')" \
     --tx-out "$(cat hot-nft/script.addr) + 5000000 + 1 $HOT_POLICY_ID" \
     --tx-out-inline-datum-file hot-nft/datum.json \
     --out-file hot-nft/body.json
   Estimated transaction fee: Coin 187281
   $ cardano-cli conway transaction sign \
     --signing-key-file orchestrator.skey \
     --tx-body-file hot-nft/body.json \
     --out-file hot-nft/tx.json
   $ cardano-cli conway transaction submit --tx-file hot-nft/tx.json
   Transaction successfully submitted.

We can query the script address to verify the UTxO is there:

.. code-block:: bash

   $ cardano-cli conway query utxo --address $(cat hot-nft/script.addr) --output-json
   {
       "b246ca4ae08331b7ed216da693c9ce87e2a6bd9e8b57d64cbede8a507e793bba#0": {
           "address": "addr_test1wqgvl76s9anu0hnnh07unfrzkrx27k4yu0vthn85w8agwxqteatvx",
           "datum": null,
           "inlineDatum": {
               "list": [
                   {
                       "constructor": 0,
                       "fields": [
                           {
                               "bytes": "fb5e0be4801aea73135efe43f4a3a6d08147af523112986dd5e7d13b"
                           },
                           {
                               "bytes": "57f5530e057e20b726b78aa31104d415cb2bce58c669829a44d009c1b1005bcd"
                           }
                       ]
                   },
                   {
                       "constructor": 0,
                       "fields": [
                           {
                               "bytes": "a3c6cb93a32b02877c61f64ab1c66c4513f12788bf7c500ead7d941b"
                           },
                           {
                               "bytes": "9923f31c1ce14e2acbd505fa8eebd4ce677d1bcd96c6d71610f810f2008ecc3a"
                           }
                       ]
                   },
                   {
                       "constructor": 0,
                       "fields": [
                           {
                               "bytes": "eda6befbe1a4cb8191752d97b67627a548bcc5f3e4653ecfdba7cdf0"
                           },
                           {
                               "bytes": "ecd64beefcf59f01a975457b0a3623d2b03d5bcf71642a8d8d8275e4668aad31"
                           }
                       ]
                   }
               ]
           },
           "inlineDatumhash": "4601cb700ba4288f35fd71eb1d86ddd8207d16b195d5a1fa0e6a4897c21edf79",
           "referenceScript": null,
           "value": {
               "e2ab737f528cd043927496dd34e6629beb1e57ee8fe92c582cf76bd0": {
                   "": 1
               },
               "lovelace": 5000000
           }
       }
   }
